<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Micah&#x27;s Secret Blog - tutorial</title>
    <subtitle>An assortment of my ramblings and random adventures.</subtitle>
    <link rel="self" type="application/atom+xml" href="https://micahkepe.com/blog/categories/tutorial/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://micahkepe.com/blog"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2025-05-31T00:00:00+00:00</updated>
    <id>https://micahkepe.com/blog/categories/tutorial/atom.xml</id>
    <entry xml:lang="en">
        <title>Let&#x27;s Build a (Mini)Shell in Rust</title>
        <published>2025-05-31T00:00:00+00:00</published>
        <updated>2025-05-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Micah Kepe
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://micahkepe.com/blog/minishell/"/>
        <id>https://micahkepe.com/blog/minishell/</id>
        
        <summary type="html">&lt;p&gt;In a little over 100 lines of Rust code, we can build a simple shell program
that can execute commands, supports piping, handles signals, and maintains
command history. This tutorial will guide you through the process of creating
a minimal shell, which we will call &quot;minishell&quot;, using Rust&#x27;s powerful standard
library and some external crates.&lt;&#x2F;p&gt;</summary>
        
    </entry>
</feed>
