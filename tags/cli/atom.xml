<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Micah&#x27;s Secret Blog - cli</title>
    <subtitle>An assortment of my ramblings and random adventures.</subtitle>
    <link rel="self" type="application/atom+xml" href="https://micahkepe.com/blog/tags/cli/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://micahkepe.com/blog"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2025-05-31T00:00:00+00:00</updated>
    <id>https://micahkepe.com/blog/tags/cli/atom.xml</id>
    <entry xml:lang="en">
        <title>Let&#x27;s Build a (Mini)Shell in Rust</title>
        <published>2025-05-31T00:00:00+00:00</published>
        <updated>2025-05-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Micah Kepe
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://micahkepe.com/blog/minishell/"/>
        <id>https://micahkepe.com/blog/minishell/</id>
        
        <summary type="html">&lt;p&gt;In a little over 100 lines of Rust code, we can build a simple shell program
that can execute commands, supports piping, handles signals, and maintains
command history. This tutorial will guide you through the process of creating
a minimal shell, which we will call &quot;minishell&quot;, using Rust&#x27;s powerful standard
library and some external crates.&lt;&#x2F;p&gt;</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Using Bash, Unix Tools, and Hammerspoon to Speed Up Your Workflow</title>
        <published>2024-12-13T00:00:00+00:00</published>
        <updated>2024-12-13T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Micah Kepe
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://micahkepe.com/blog/workflow-automation/"/>
        <id>https://micahkepe.com/blog/workflow-automation/</id>
        
        <summary type="html">&lt;p&gt;With just a basic working knowledge of writing Bash scripts and understanding
Unix tools and their design philosophy, you can easily create scripts to
automate your workflow and improve your productivity. In this post, we&#x27;ll get
our feet wet in writing Bash scripts and combine them with some powerful Unix
tools to create a powerful and versatile toolset. We&#x27;ll also explore how you can
use Hammerspoon, a macOS automation tool, to take your automation to the next
level.&lt;&#x2F;p&gt;</summary>
        
    </entry>
</feed>
