<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Micah&#x27;s Secret Blog - data structures</title>
    <subtitle>An assortment of my ramblings and random adventures.</subtitle>
    <link rel="self" type="application/atom+xml" href="https://micahkepe.com/blog/tags/data-structures/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://micahkepe.com/blog"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-05-26T00:00:00+00:00</updated>
    <id>https://micahkepe.com/blog/tags/data-structures/atom.xml</id>
    <entry xml:lang="en">
        <title>Bloom Filters: Space-Efficient Probabilistic Data Structures</title>
        <published>2024-05-25T00:00:00+00:00</published>
        <updated>2024-05-26T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Micah Kepe
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://micahkepe.com/blog/bloom-filters/"/>
        <id>https://micahkepe.com/blog/bloom-filters/</id>
        
        <summary type="html">&lt;p&gt;In the realm of computer science, efficiency is often the key to solving complex
problems. One elegant solution that stands out for its efficiency is the Bloom
filter. Despite being relatively lesser-known, Bloom filters offer a powerful
method for determining set membership while using minimal space. This post
explores what Bloom filters are, how they work, their applications in various
fields, and compares them with other data structures.&lt;&#x2F;p&gt;</summary>
        
    </entry>
</feed>
